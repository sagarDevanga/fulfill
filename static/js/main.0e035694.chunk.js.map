{"version":3,"sources":["logo.svg","TableRow.jsx","Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableRow","props","w","Math","floor","Object","keys","data","length","style","width","textAlign","border","id","type","value","checked","onChange","e","handleChange","map","key","fontWeight","Table","this","checkAll","handleSelectAll","d","dObject","handleRowClick","Component","prototypes","PropTypes","arrayOf","object","isRequired","func","App","useState","isLoading","setisLoading","setdata","displayData","setdisplayData","error","seterror","allChecked","setallChecked","pageNumber","useRef","handleScroll","window","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","slice","current","h","concat","getMoreData","useEffect","fetch","then","res","json","modifiedRes","r","catch","console","log","addEventListener","removeEventListener","className","newData","target","selectedData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e035694.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nfunction TableRow(props) {\r\n\r\n    const w = Math.floor(100 / Object.keys(props.data).length);\r\n\r\n    return <tr>\r\n        <td style={{ width: `${w}%`, textAlign: \"center\", border: \"1px solid grey\" }}>\r\n            <input id={props.data[\"id\"]} type=\"checkbox\" value={props.data[\"id\"]} checked={props.data[\"checked\"]} onChange={(e) => props.handleChange(e, props.data)} />\r\n        </td>\r\n        {\r\n            Object.keys(props.data).map(key => {\r\n\r\n                let style = { width: `${w}%`, textAlign: \"center\", border: \"1px solid grey\" }\r\n\r\n                if (typeof props.data[key] == \"number\") {\r\n                    style = { width: `${w}%`, textAlign: \"right\", border: \"1px solid grey\", fontWeight: \"bold\" }\r\n                }\r\n\r\n                if (key != \"checked\") {\r\n                    return <td style={style}>\r\n                        {props.data[key]}\r\n                    </td>\r\n                }\r\n                return null\r\n\r\n            })\r\n        }\r\n    </tr>\r\n}\r\nexport default TableRow\r\n","import React, { Component } from \"react\";\r\nimport TableRow from \"./TableRow\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Table extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        const w = Math.floor(100 / Object.keys(this.props.data[0]).length);\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.data.length == 0 ?\r\n                        <p>No data available</p>\r\n                        : <table style={{ border: \"1px solid grey\" }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: `${w}%`, border: \"1px solid grey\" }}>\r\n                                        <input type=\"checkbox\" checked={this.props.checkAll} onChange={(e) => this.props.handleSelectAll(e)} />\r\n                                    </th>\r\n                                    {\r\n\r\n                                        Object.keys(this.props.data[0]).map(d => {\r\n\r\n                                            if (d != \"checked\") {\r\n                                                return <th style={{ width: `${w}%`, border: \"1px solid grey\" }}>{d}</th>\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.data.map(dObject => <TableRow data={dObject} handleChange={(e, data) => this.props.handleRowClick(e, data)} />)\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTable.prototypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    handleRowClick: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Table\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport Table from './Table';\n\nfunction App() {\n\n  const [isLoading, setisLoading] = useState(true)\n  const [data, setdata] = useState([])\n  const [displayData, setdisplayData] = useState([])\n  const [error, seterror] = useState(\"\")\n  const [allChecked, setallChecked] = useState(false)\n  const pageNumber = useRef(1)\n\n  const selectAll = (e) => {\n\n    const newData = data.map(d => ({ ...d, checked: e.target.checked }))\n    setallChecked(e.target.checked)\n    setdata(newData)\n  }\n\n  const handleChange = (e, selectedData) => {\n\n    const newData = data.map(d => {\n      if (d.id == selectedData.id) {\n        return { ...d, checked: e.target.checked }\n      }\n      return d\n    })\n\n    setdata(newData)\n    setallChecked(false)\n  }\n\n  function getMoreData() {\n\n    //get more batch of data\n    const d = data.slice((pageNumber.current * 50), (2 * pageNumber.current * 50))\n    const h = displayData.concat(d)\n    pageNumber.current += 1\n\n    setdisplayData(h)\n\n  }\n\n  const handleScroll = (e) => {\n\n    if (window.innerHeight + document.documentElement.scrollTop > (document.scrollingElement.scrollHeight - 1000)) {\n      getMoreData()\n    }\n\n  }\n\n\n  useEffect(() => {\n\n\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\n      .then(res => res.json())\n      .then(res => {\n\n        const modifiedRes = res.map(r => {\n          return { ...r, \"checked\": false }\n        })\n\n        const displayData = modifiedRes.slice(0, 50)\n\n        setdisplayData(displayData)\n        setdata(modifiedRes)\n        setallChecked(false)\n        setisLoading(false)\n      })\n      .catch(error => {\n        console.log(error)\n        setisLoading(false)\n        seterror(\"Something went wrong\")\n      })\n\n  }, [])\n\n  useEffect(() => {\n\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  })\n\n  return (\n\n    <div className=\"App\">\n      {\n        isLoading ? <p>LOADING DATA</p>\n          : error ? <p>Something went wrong</p>\n            : <Table data={displayData} checkAll={allChecked} handleSelectAll={selectAll} handleRowClick={handleChange} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}